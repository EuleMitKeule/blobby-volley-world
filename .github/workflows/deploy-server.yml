name: deploy-server

on:
  push:
    branches: [ master ]

  workflow_dispatch:

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  REGISTRY: ghcr.io
  IMAGE_NAME: eulemitkeule/blobby-volley-world-server

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releaseCreated: ${{ steps.release.outputs.new-release-published }}
      version: ${{ steps.release.outputs.release-version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create release
        uses: docker://ghcr.io/codfish/semantic-release-action:latest
        id: release
        with:
          tag_format: 'v${version}'
          branches: |
            [
              'master'
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Cache Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-blobby-volley-world-server
      
      - name: Build Server
        uses: game-ci/unity-builder@v2.1.2
        id: build
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: StandaloneLinux64
          buildsPath: ./deploy-server-builds/
          buildMethod: "Editor.Builder.BuildServerLinux"
          buildName: blobby-volley-world-server
          versioning: None

      - name: Copy Server Data
        run: |
          cp ./serverData.json ./deploy-server-builds/StandaloneLinux64/serverData.json

      - uses: belon/docker-build-push@v4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.IMAGE_NAME }}
          tags: latest,${{ needs.release.outputs.version }}
